"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
/**
 * Represents a time unit like second, minute, hour.
 *
 * @export
 * @class TimeUnit
 */
class TimeUnit {
    /**
     * Creates an instance of TimeUnit.
     *
     * @param {number} nanosecondsPerUnit
     * @memberof TimeUnit
     */
    constructor(nanosecondsPerUnit) {
        this.nanosecondsPerUnit = nanosecondsPerUnit;
    }
    /**
     * Gets the nanoseconds in one unit of this time unit.
     *
     * @returns {number}
     * @memberof TimeUnit
     */
    getNanosecondsPerUnit() {
        return this.nanosecondsPerUnit;
    }
    /**
     * Converts the given value to the time unit specified.
     *
     * E.g.:
     *
     * NANOSECOND.convertTo(1000, MICROSECOND) equals 1 microsecond.
     * MICROSECOND.convertTo(1000, NANOSECOND) equals 1000000 nanoseconds.
     *
     * @param {number} value
     * @param {TimeUnit} unit
     * @returns {number}
     * @memberof TimeUnit
     */
    convertTo(value, unit) {
        return (value * this.nanosecondsPerUnit) / unit.nanosecondsPerUnit;
    }
}
exports.TimeUnit = TimeUnit;
/**
 * One nanosecond.
 */
exports.NANOSECOND = new TimeUnit(1);
/**
 * One microsecond in nanoseconds.
 */
exports.MICROSECOND = new TimeUnit(1000);
/**
 * One millisecond in nanoseconds.
 */
exports.MILLISECOND = new TimeUnit(1000000);
/**
 * One second in nanoseconds.
 */
exports.SECOND = new TimeUnit(1000000000);
/**
 * One minute in nanoseconds.
 */
exports.MINUTE = new TimeUnit(60000000000);
/**
 * One hour in nanoseconds.
 */
exports.HOUR = new TimeUnit(3600000000000);
/**
 * One day in nanoseconds.
 */
exports.DAY = new TimeUnit(86400000000000);
//# sourceMappingURL=time-unit.js.map