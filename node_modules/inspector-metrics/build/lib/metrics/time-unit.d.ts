import "source-map-support/register";
/**
 * Represents a time unit like second, minute, hour.
 *
 * @export
 * @class TimeUnit
 */
export declare class TimeUnit {
    /**
     * The nanoseconds for one unit of this time unit.
     *
     * @private
     * @type {number}
     * @memberof TimeUnit
     */
    private nanosecondsPerUnit;
    /**
     * Creates an instance of TimeUnit.
     *
     * @param {number} nanosecondsPerUnit
     * @memberof TimeUnit
     */
    constructor(nanosecondsPerUnit: number);
    /**
     * Gets the nanoseconds in one unit of this time unit.
     *
     * @returns {number}
     * @memberof TimeUnit
     */
    getNanosecondsPerUnit(): number;
    /**
     * Converts the given value to the time unit specified.
     *
     * E.g.:
     *
     * NANOSECOND.convertTo(1000, MICROSECOND) equals 1 microsecond.
     * MICROSECOND.convertTo(1000, NANOSECOND) equals 1000000 nanoseconds.
     *
     * @param {number} value
     * @param {TimeUnit} unit
     * @returns {number}
     * @memberof TimeUnit
     */
    convertTo(value: number, unit: TimeUnit): number;
}
/**
 * One nanosecond.
 */
export declare const NANOSECOND: TimeUnit;
/**
 * One microsecond in nanoseconds.
 */
export declare const MICROSECOND: TimeUnit;
/**
 * One millisecond in nanoseconds.
 */
export declare const MILLISECOND: TimeUnit;
/**
 * One second in nanoseconds.
 */
export declare const SECOND: TimeUnit;
/**
 * One minute in nanoseconds.
 */
export declare const MINUTE: TimeUnit;
/**
 * One hour in nanoseconds.
 */
export declare const HOUR: TimeUnit;
/**
 * One day in nanoseconds.
 */
export declare const DAY: TimeUnit;
