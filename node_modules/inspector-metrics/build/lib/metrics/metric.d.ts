import "source-map-support/register";
import { Groupable } from "./groupable";
import { MetadataContainer } from "./metadata-container";
import { Taggable } from "./taggable";
/**
 * Representation for a metrics.
 *
 * @export
 * @interface Metric
 * @extends {Groupable}
 * @extends {Taggable}
 */
export interface Metric extends Groupable, MetadataContainer, Taggable {
    /**
     * Gets the name of the metric.
     *
     * @returns {string}
     * @memberof Metric
     */
    getName(): string;
    /**
     * Sets the name of the metric.
     *
     * @param {string} name
     * @returns {this}
     * @memberof Metric
     */
    setName(name: string): this;
    /**
     * Gets the description of the metric.
     *
     * @returns {string}
     * @memberof Metric
     */
    getDescription(): string;
    /**
     * Sets the description of the metric.
     *
     * @param {string} description
     * @returns {this}
     * @memberof Metric
     */
    setDescription(description: string): this;
}
/**
 * Abstract base-class for a metric which implements commonly needed functions:
 * - get / set name
 * - get / set tags
 * - get / set group
 *
 * @export
 * @abstract
 * @class BaseMetric
 * @implements {Metric}
 */
export declare abstract class BaseMetric implements Metric {
    /**
     * A static number instance to give an unique id within an application instance.
     *
     * @private
     * @static
     * @memberof BaseMetric
     */
    private static COUNTER;
    /**
     * The unique id of this metric instance.
     *
     * @type {number}
     * @memberof BaseMetric
     */
    readonly id: number;
    /**
     * Maps of tags for this metric.
     *
     * @protected
     * @type {Map<string, string>}
     * @memberof BaseMetric
     */
    protected tags: Map<string, string>;
    /**
     * The group set to this metric.
     *
     * @protected
     * @type {string}
     * @memberof BaseMetric
     */
    protected group: string;
    /**
     * The name of this metric.
     *
     * @protected
     * @type {string}
     * @memberof BaseMetric
     */
    protected name: string;
    /**
     * The description of this metric.
     *
     * @protected
     * @type {string}
     * @memberof BaseMetric
     */
    protected description: string;
    /**
     * The metadata associated with an instance of class.
     *
     * @protected
     * @type {Map<string, any>}
     * @memberof BaseMetric
     */
    protected metadata: Map<string, any>;
    getMetadataMap(): Map<string, any>;
    getMetadata<T>(name: string): T;
    removeMetadata<T>(name: string): T;
    setMetadata<T>(name: string, value: T): this;
    getName(): string;
    setName(name: string): this;
    getDescription(): string;
    setDescription(description: string): this;
    getGroup(): string;
    setGroup(group: string): this;
    getTags(): Map<string, string>;
    getTag(name: string): string;
    setTag(name: string, value: string): this;
    setTags(tags: Map<string, string>): this;
    addTags(tags: Map<string, string>): this;
    removeTag(name: string): this;
    removeTags(...names: string[]): this;
    toString(): string;
}
