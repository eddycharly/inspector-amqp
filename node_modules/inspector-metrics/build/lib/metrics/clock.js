"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
/**
 * Gets the time elapsed from parameter one to parameter two in nanoseconds.
 *
 * Also assumes that the first point in time is older than the second point in time.
 *
 * @export
 * @param {Time} one time sample
 * @param {Time} two time sample
 * @returns {number} a duration in nanoseconds
 */
function diff(one, two) {
    if (!one || !two) {
        return 0;
    }
    const oneValue = one.nanoseconds + one.milliseconds * 1000000;
    const twoValue = two.nanoseconds + two.milliseconds * 1000000;
    return twoValue - oneValue;
}
exports.diff = diff;
/**
 * Abstraction of a clock. Used to determine progress in time.
 *
 * @export
 * @abstract
 * @class Clock
 */
class Clock {
}
exports.Clock = Clock;
/**
 * Default implementation of a Clock. Uses Date.now() as source of truth.
 *
 * @export
 * @class StdClock
 * @extends {Clock}
 */
class StdClock extends Clock {
    /**
     * Returns a Time object whos nanoseconds component is always zero.
     *
     * @returns {Time}
     * @memberof StdClock
     */
    time() {
        const time = {
            milliseconds: Date.now(),
            nanoseconds: 0,
        };
        return time;
    }
}
exports.StdClock = StdClock;
//# sourceMappingURL=clock.js.map