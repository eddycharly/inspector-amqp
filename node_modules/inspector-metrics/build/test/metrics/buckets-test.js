"use strict";
/* tslint:disable:no-unused-expression */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
require("source-map-support/register");
const chai = require("chai");
const mocha_typescript_1 = require("mocha-typescript");
const metrics_1 = require("../../lib/metrics");
const expect = chai.expect;
let BucketsTest = class BucketsTest {
    "checking linear bucket creation"() {
        expect(metrics_1.Buckets.linear(0, 0.1, 5).boundaries)
            .to.deep.equal([0.0, 0.1, 0.2, 0.3, 0.4]);
        expect(metrics_1.Buckets.linear(0, 0.5, 5).boundaries)
            .to.deep.equal([0.0, 0.5, 1.0, 1.5, 2.0]);
        expect(metrics_1.Buckets.linear(-5, 0.5, 20).boundaries)
            .to.deep.equal([
            -5.0, -4.5, -4.0, -3.5, -3.0,
            -2.5, -2.0, -1.5, -1.0, -0.5,
            0.0, 0.5, 1.0, 1.5, 2.0,
            2.5, 3.0, 3.5, 4.0, 4.5,
        ]);
    }
    "checking precision of linear bucket"() {
        expect(metrics_1.Buckets.linear(0, 0.0001, 5).boundaries)
            .to.deep.equal([0.0, 0.0001, 0.0002, 0.0003, 0.0004]);
        expect(metrics_1.Buckets.linear(0, 0.00001, 11).boundaries)
            .to.deep.equal([
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0001,
        ]);
        expect(metrics_1.Buckets.linear(0, 0.000001, 5, 1000000).boundaries)
            .to.deep.equal([0.0, 0.000001, 0.000002, 0.000003, 0.000004]);
        expect(metrics_1.Buckets.linear(0, 0.0000001, 11, 1000000).boundaries)
            .to.deep.equal([
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.000001,
        ]);
    }
    "checking exponential bucket creation"() {
        expect(metrics_1.Buckets.exponential(0.1, 2, 5).boundaries)
            .to.deep.equal([0.1, 0.2, 0.4, 0.8, 1.6]);
        expect(metrics_1.Buckets.exponential(1.0, 5, 5).boundaries)
            .to.deep.equal([1.0, 5.0, 25.0, 125.0, 625.0]);
    }
    "checking precision of exponential bucket"() {
        expect(metrics_1.Buckets.exponential(1, 1.0001, 5).boundaries)
            .to.deep.equal([1.0, 1.0001, 1.0002, 1.0003, 1.0004]);
        expect(metrics_1.Buckets.exponential(1, 1.00001, 5, 100000).boundaries)
            .to.deep.equal([1.0, 1.00001, 1.00002, 1.00003, 1.00004]);
        expect(metrics_1.Buckets.exponential(1, 1.0000002, 10, 100000000).boundaries)
            .to.deep.equal([
            1.00000000, 1.00000019, 1.00000039, 1.00000059, 1.00000079,
            1.00000099, 1.00000119, 1.00000139, 1.00000159, 1.00000179,
        ]);
    }
};
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], BucketsTest.prototype, "checking linear bucket creation", null);
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], BucketsTest.prototype, "checking precision of linear bucket", null);
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], BucketsTest.prototype, "checking exponential bucket creation", null);
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], BucketsTest.prototype, "checking precision of exponential bucket", null);
BucketsTest = __decorate([
    mocha_typescript_1.suite
], BucketsTest);
exports.BucketsTest = BucketsTest;
//# sourceMappingURL=buckets-test.js.map