"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:no-unused-expression
require("reflect-metadata");
require("source-map-support/register");
const chai = require("chai");
const mocha_typescript_1 = require("mocha-typescript");
const gauge_1 = require("../../lib/metrics/gauge");
const expect = chai.expect;
let SimpleGaugeTest = class SimpleGaugeTest {
    "check name and description"() {
        let gauge = new gauge_1.SimpleGauge();
        expect(gauge.getName()).to.be.undefined;
        expect(gauge.getDescription()).to.be.undefined;
        gauge = new gauge_1.SimpleGauge("gauge-name");
        expect(gauge.getName()).to.equal("gauge-name");
        expect(gauge.getDescription()).to.be.undefined;
        gauge = new gauge_1.SimpleGauge("gauge-name", "gauge-description");
        expect(gauge.getName()).to.equal("gauge-name");
        expect(gauge.getDescription()).to.equal("gauge-description");
    }
    "check set and get value"() {
        const gauge = new gauge_1.SimpleGauge();
        expect(gauge.getValue()).to.equal(0);
        gauge.setValue(1);
        expect(gauge.getValue()).to.equal(1);
    }
};
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SimpleGaugeTest.prototype, "check name and description", null);
__decorate([
    mocha_typescript_1.test,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SimpleGaugeTest.prototype, "check set and get value", null);
SimpleGaugeTest = __decorate([
    mocha_typescript_1.suite
], SimpleGaugeTest);
exports.SimpleGaugeTest = SimpleGaugeTest;
//# sourceMappingURL=gauge-test.js.map